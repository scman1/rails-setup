# ruby tasks 
# required for installing and runnign the rails application on the deployment environment
#   

- name: get rbenv from github
  git: 
    repo: https://github.com/rbenv/rbenv.git
    dest: /home/deploy/.rbenv
  
- name: add PATH variable to bashrc
  lineinfile: 
    path: /home/deploy/.bashrc
    line: 'export PATH="$HOME/.rbenv/bin:$PATH"'
    regexp: ".rbenv/bin"

- name: add eval to bashrc
  lineinfile: 
    path: /home/deploy/.bashrc
    line: 'eval "$(rbenv init -)"'
    regexp: "rbenv init -"

- name: get rbenv build from github
  git: 
    repo: https://github.com/rbenv/ruby-build.git
    dest: /home/deploy/.rbenv/plugins/ruby-build
  
- name: add ruby-build PATH variable to bashrc
  lineinfile: 
    path: /home/deploy/.bashrc
    line: 'export PATH="$HOME/.rbenv/plugins/ruby-build/bin:$PATH"'
    regexp: "ruby-build"

- name: get rbenv vars from github
  git: 
    repo: https://github.com/rbenv/rbenv-vars.git
    dest: /home/deploy/.rbenv/plugins/ruby-vars

- name: Recursively change ownership of /home/deploy/.rbenv
  file:
    path: /home/deploy/.rbenv
    state: directory
    recurse: yes
    owner: deploy
    group: deploy

# copy config file to sites enabled
# !!! temporary this file must be manually edited to add cookie signing key
# !!! do not leave as it is on deploy server
- name: copy vars file
  copy:
    src: vars.txt
    dest: /home/deploy/.rbenv-vars

##just to debug become issues
#- name: Debug Ansible user
#  command: whoami
#  register: current_user
#  become: true
#  become_user: deploy

#- debug:
#    msg: "Ansible is running as: {{ current_user.stdout }}"


#############################################
# Become needs acl installed.
# and rbenv needs the full path 
############################################# 
# install the required version of ruby
- name: install ruby 3.2.2
  command: /home/deploy/.rbenv/bin/rbenv install 3.2.2 #rbenv needs the full path does not get the user local
  become: true
  become_user: deploy

# enable ruby 3.2.2 as global
- name: set ruby 3.2.2 as the global ruby
  command: /home/deploy/.rbenv/bin/rbenv global 3.2.2
  become: true
  become_user: deploy

# install/update bundler to latest version
# not working yet
#- name: install bundler gem
#  gem:
#    name: bundler
#    state: latest
